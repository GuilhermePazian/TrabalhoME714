result<-estima.theta(partidaria,2,0.95)
result
plot.graf.prop(result,1,1.2)
View(result)
estimado_theta_1
partidaria
estimado_theta_1 = estima.theta(df_11,2,0.95)
plot.graf.prop(estimado_theta_1,1,0.5)
result<-estima.theta(partidaria,2,0.95)
# gráfico
# plot.graf.prop(result,1,1.2)
result<-estima.theta(partidaria,2,0.95)
plot.graf.prop(result,1,1.2)
#mudando o separador decimal para resultados "printados"
options(OutDec= ",")
#definindo opções padrões dos chunks
knitr::opts_chunk$set(fig.width=6, fig.height=3.5, fig.path='Figs/', fig.align='center', echo=FALSE, warning=FALSE, message=FALSE)
#eval= FALSE faz com que o R ignore este chunk
#echo = FALSE não permite que o chunk apareça no pdf
#pacotes = c("tidyverse","plyr","dplyr","reshape2","knitr","captioner","gdata","gridExtra","Matrix","plotrix")
#install.packages(pacotes)
# pacote utiliado para gráficos
library(ggplot2)
# pacote que deixa os gráficos do ggplot lado a lado
library(gridExtra)
# pacotes para manipulação de dados
library(reshape2)
library(plyr)
library(dplyr)
#pacote para fazer legenda
library(captioner)
library(Matrix)
library(plotrix)
figs <- captioner(prefix="Figura")
tbls <- captioner(prefix="Tabela")
#inslação dos pacotes necessários
#install.packages(c("tidyverse","gridExtra","car","captioner","gvlma"))
#instalacao de um pacote pra "printar" tabelas mais bonitinhas
#install.packages(
# 'printr',
# type = 'source',
# repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
#)
# estima os parâmetros de uma única tabela
# r x s oriunda de um modelo multinomial
# ou produto de multinomiais
# LEMBRETE: A FUNÇÃO SEMPRE CONCATENA VERTICALMENTE AS LINHAS. ASSIM
# NO CASO DO MODELO PRODUTO DE MULTINOMIAIS, CADA LINHA DEVE REPRESENTAR
# UMA MULTINOMIAL
#input= tabela: tabela de contingência
#       modelo: 1 - multinomial, 2 - produto de multinomais
#       gama: nível de confiança para a construção dos IC's
estima.theta<-function(tabela,modelo,gama)
{
auxl1 <-c(rownames(tabela))
auxl2 <-c(colnames(tabela))
label<-c(paste(auxl1[1],"&",auxl2[1]))
for(i in 1:nrow(tabela))
{
for(j in 1:ncol(tabela))
{
label<-rbind(label,c(paste(auxl1[i],"&",auxl2[j])))
}
}
label<-cbind(label[2:nrow(label),])
if(modelo ==1) # multinomial
{
vn <- c(t(tabela))
n  <- sum(vn)
ncat <- length(vn)
vp <- vn/n
#vp[vp==0]=0.01
vpc <- cbind(vp)
aux <- vpc%*%t(vpc)
mcov <- matrix(as.numeric((as.matrix(Diagonal(ncat,vpc))- aux)/n),ncat,ncat)
ep <- sqrt(diag(mcov))
epc<-cbind(ep)
}
else if(modelo ==2)# produto de multinomias
{
vn <- as.numeric(apply(tabela,1,sum))
vpg<- tabela/vn#c(t(tabela/vn))
ncatr<- ncol(tabela)
nmult<-nrow(tabela)
#vpg[vpg==0]=0.01
vp <- vpg[1,]
vpc <- cbind(vp)
aux <-vpc%*%t(vpc)
mcov <- matrix((as.matrix(Diagonal(ncatr,vpc))- aux)/vn[1],ncatr,ncatr)
mcovg <-mcov
for(j in 2:nmult)
{
vp <- vpg[j,]
vpc <- cbind(vp)
aux <-vpc%*%t(vpc)
mcov <- matrix((as.matrix(Diagonal(ncatr,vpc))- aux)/vn[j],ncatr,ncatr)
mcovg<-bdiag(mcovg,mcov)
}
mcov<-as.matrix(bdiag(mcovg))
vp<- c(t(vpg))
vpc<-cbind(vp)
ep<- sqrt(diag(mcov))
epc<-cbind(ep)
}
qic <- qnorm(0.5*(1+gama))
LIIC <- c(vpc)-c(qic*epc)
LSIC <- c(vpc)+ c(qic*epc)
mIC  <- cbind(LIIC,LSIC)
mIC[mIC[,1]<=0,1]=0
mIC[mIC[,2]>=1,2]=1
m.result <-cbind(round(vpc,2),round(epc,2),round(mIC,2))
rownames(m.result)<-label
colnames(m.result)<- c("Estimativa","EP","LIIC","LSIC")
result<- list(vpc=vpc,epc=epc,mIC=mIC,mcov=mcov,label=label)
return(result)
}
# gera gráficos das porporções estimadas (sem considerar modelos)
#input= tabela: tabela de contingência
#       result: objeto com o resultado da aplicação da função estima.theta
#       oplas: orientação dos "labels" do eixo "x"
#       eixo: dimensão dos labels dos eixos
plot.graf.prop<-function(result,oplas,eixo)
{
label<-c(result$label)
vpc<-cbind(c(result$vpc))
mIC<-(result$mIC)
mIC<- cbind(c(mIC[,1]),c(mIC[,2]))
plotCI(vpc,ui=mIC[,2],li=mIC[,1],axes=F,xlab="categoria",ylab="proporções",pch=19,cex=1.2,cex.axis=1.2,cex.lab=1.2)
axis(2,cex.axis=1.2)
axis(1,1:length(vpc),labels=label,cex.axis=eixo,las=oplas)
}
# Realiza testes do tipo Bpi=D para uma única tabela
# r x s oriunda de um modelo multinomial
# ou produto de multinomiais
#input= result: objeto com o resultado da aplicação da função estima.theta
#       m.B e v.D: matriz e vetor definidores das hipóteses de interesse, respectivamente
test.Bpi.D<-function(result,m.B,v.D)
{
vpc<-cbind(c(result$vpc))
mcov<-result$mcov
mcov[mcov==0]<-0.000000000001
e.Q <-t(m.B%*%vpc-v.D)%*%solve(m.B%*%mcov%*%t(m.B))%*%(m.B%*%vpc-v.D)
ngl<-nrow(m.B)
e.pvalor<-1-pchisq(e.Q,ngl)
cat("Estatistica Q = ",round(e.Q,2),"\n")
cat("pvalor = ",round(e.pvalor,4),"\n")
cat("g.l. =",ngl,"\n")
cat("Matriz B :","\n")
print(v.D)
}
# Ajusta modelos de regressão do tipo Api=Xbeta para uma única tabela
# r x s oriunda de um modelo multinomial
# ou produto de multinomiais
#input= result: objeto com o o resultado da aplicação da função estima.theta
#       m.B e m.X: matrizes definidoras do modelo de interesse
MR.Api.Xbeta<-function(result,m.A,m.X)
{
label<-c(result$label)
vpc<-cbind(c(result$vpc))
mcov<-result$mcov
mcov[mcov==0]<-0.000000000001
mcovF <- m.A%*%mcov%*%t(m.A)
auxav <- eigen(mcovF,only.values=TRUE)$values
nlmcovF <- nrow(mcovF)
while(min(auxav) <= 0.000000001)
{
mcovF <- mcovF + diag(0.00001,nlmcovF,nlmcovF)
auxav <- eigen(mcovF,only.values=TRUE)$values
}
imcovF <- solve(mcovF)
vF <- m.A%*%vpc
mcovbeta <- solve(t(m.X)%*%imcovF%*%m.X)
vbeta<- mcovbeta%*%t(m.X)%*%imcovF%*%vF
epbeta <- cbind(c(sqrt(diag(mcovbeta))))
epl <- m.X%*%vbeta
eQ <-t(vF-epl)%*%imcovF%*%(vF-epl)
ngl<-nrow(m.X)-nrow(vbeta)
epvalor<-1-pchisq(eQ,ngl)
result<- list(vpc=vpc,vbeta=vbeta,epbeta=epbeta,mcovbeta=mcovbeta,label=label)
return(result)
}
# Testa hipóteses do tipo CB= M para modelos lineares ajustados
# via função MR.Api.Xbeta
# input = result: objeto com o resultado da aplicação da função MR.Api.Xbeta
# Matrizes m.C e v.M
testa.CB.M.Api.Xbeta<-function(result,m.C,v.M)
{
vbeta <- result$vbeta
mcovbeta <- result$mcovbeta
e.QC <- t(m.C%*%vbeta - v.M)%*%solve(m.C%*%mcovbeta%*%t(m.C))%*%(m.C%*%vbeta - v.M)
ngl<-nrow(m.C)
e.pvalor<-1-pchisq(e.QC,ngl)
print(v.M)
}
#Estima proporções sob o modelo Api=Xbeta
#input= result: objeto com o resultado da aplicação da função MR.Api.Xbeta
#       m.H e v.F: matriz e vetor que recuperam as proporções originais
estim.prp.ApiXbeta<-function(result,m.H,v.F,gama)
{
label<-result$label
vpc <- result$vpc
vbeta<-result$vbeta
mcovbeta<-result$mcovbeta
vpesm <- m.H%*%vbeta + v.F
mcovsm <- m.H%*%mcovbeta%*%t(m.H)
vepsm <- sqrt(diag(mcovsm))
qic <- qnorm(0.5*(1+gama))
LIIC <- c(vpesm)-c(qic*vepsm)
LSIC <- c(vpesm)+ c(qic*vepsm)
mIC  <- cbind(LIIC,LSIC)
mIC[mIC[,1]<=0,1]=0
mIC[mIC[,2]>=1,2]=1
result<- list(vpesm=vpesm,vepsm=vepsm,mcovbeta=mcovbeta,mIC=mIC)
plot(vpc,axes=F,ylim=c(min(vpc,mIC),max(vpc,mIC)),xlab="categoria",ylab="proporções",cex=1.2)
plotCI(vpesm,ui=mIC[,2],li=mIC[,1],axes=F,pch=19,cex=1.2,cex.axis=1.2,cex.lab=1.2,add=T)
axis(2,cex.axis=1.2)
axis(1,1:length(vpc),labels=label,cex.axis=1.2)
}
# Ajusta modelos de regressão do tipo AlnGpi=Xbeta para uma única tabela
# r x s oriunda de um modelo multinomial
# ou produto de multinomiais
# input= result: objeto com o o resultado da aplicação da função estima.theta
#       m.B, m.G e m.X: matrizes definidoras do modelo de interesse
MR.AlnGpi.Xbeta<-function(result,m.A,m.G,m.X)
{
label<-c(result$label)
vpc<-cbind(c(result$vpc))
mcov<-result$mcov
mcov[mcov==0]<-0.000000000001
auxmG<-m.G%*%vpc
auxmG[auxmG==0]<-0.000000000001
m.B <- solve(diag(c(auxmG)))
mPsi <- m.A%*%m.B%*%m.G
mcovF <- mPsi%*%mcov%*%t(mPsi)
auxav <- eigen(mcovF,only.values=TRUE)$values
nlmcovF <- nrow(mcovF)
while(min(auxav) <= 0.001)
{
mcovF <- mcovF + diag(0.00001,nlmcovF,nlmcovF)
auxav <- eigen(mcovF,only.values=TRUE)$values
}
imcovF <- solve(mcovF)
vF <- m.A%*%(log(auxmG))
mcovbeta <- solve(t(m.X)%*%imcovF%*%m.X)
vbeta<- mcovbeta%*%t(m.X)%*%imcovF%*%vF
epbeta <- cbind(c(sqrt(diag(mcovbeta))))
epl <- m.X%*%vbeta
eQ <-t(vF-epl)%*%imcovF%*%(vF-epl)
ngl<-nrow(m.X)-nrow(vbeta)
epvalor<-1-pchisq(eQ,ngl)
cat("Est. dos par. beta","\n")
print(round(cbind(vbeta,epbeta),2))
cat("Teste para a qualidade do ajuste do modelo = ",round(eQ,2),"\n")
cat("pvalor = ",round(epvalor,4),"\n")
cat("g.l. =",ngl,"\n")
cat("Matriz A :","\n")
print(m.A)
cat("Matriz X :","\n")
print(m.X)
result<- list(vpc=vpc,vbeta=vbeta,epbeta=epbeta,mcovbeta=mcovbeta,label=label)
return(result)
}
df_1 = read.csv("WitzelGrande_Singer2000.csv", header = TRUE)
names(df_1) = c("Material","A","B","C")
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c("0","1","2","3","4","Total"))
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]));
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c("0","1","2","3","4","Total"))
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c("0","1","2","3","4","Total"))
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c("0","1","2","3","4","Total"))
names(dimnames(df_111)) <- c("Material","Nível de microinfiltração")
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c("0 ","1 ","2 ","3 ","4 ","Total"))
names(dimnames(df_111)) <- c("Material","Nível de microinfiltração")
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"," Total"))
names(dimnames(df_111)) <- c("Material","Nível de microinfiltração")
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
#análise descritiva
estimado_theta_1 = estima.theta(df_11,2,0.95)
plot.graf.prop(estimado_theta_1,1,0.5)
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"," Total"))
names(dimnames(df_111)) <- c("Material","Nível de microinfiltração")
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
#análise descritiva
estimado_theta_1 = estima.theta(df_11,2,0.95)
plot.graf.prop(estimado_theta_1,1,0.5)
estimado_theta_1
rownames(df_111)
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
dimnames(df_11) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"))
names(dimnames(df_11)) <- c("Material","Nível de microinfiltração")
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"," Total"))
names(dimnames(df_111)) <- c("Material","Nível de microinfiltração")
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
dimnames(df_11) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"))
names(dimnames(df_11)) <- c("Material","Nível de microinfiltração")
df_11
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
df_111 = as.matrix(data.frame(df_11,totais))
dimnames(df_111) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"," Total"))
names(dimnames(df_111)) <- c("Material","Nível de microinfiltração")
#rownames(df_111)=c("Allbond","Optibond","Scotchbond")
#colnames(df_111)=c("0","1","2","3","4","Total")
df_111
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
dimnames(df_11) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"))
names(dimnames(df_11)) <- c("Material","Nível de microinfiltração")
df_11
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
tbl_contingencia = as.matrix(data.frame(df_11,totais))
dimnames(tbl_contingencia) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"," Total"))
names(dimnames(tbl_contingencia)) <- c("Material","Nível de microinfiltração")
df_111
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
dimnames(df_11) <- list(c("Allbond","Optibond","Scotchbond"),c("  0","  1","  2","  3","  4"))
names(dimnames(df_11)) <- c("Material","Nível de microinfiltração")
df_11
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
tbl_contingencia = as.matrix(data.frame(df_11,totais))
dimnames(tbl_contingencia) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"," Total"))
names(dimnames(tbl_contingencia)) <- c("Material","Nível de microinfiltração")
df_111
#análise descritiva
estimado_theta_1 = estima.theta(df_111,2,0.95)
plot.graf.prop(estimado_theta_1,1,0.5)
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
dimnames(df_11) <- list(c("Allbond","Optibond","Scotchbond"),c("0","1","2","3","4"))
names(dimnames(df_11)) <- c("Material","Nível de microinfiltração")
df_11
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
tbl_contingencia = as.matrix(data.frame(df_11,totais))
dimnames(tbl_contingencia) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"," Total"))
names(dimnames(tbl_contingencia)) <- c("Material","Nível de microinfiltração")
df_111
#análise descritiva
estimado_theta_1 = estima.theta(df_111,2,0.95)
plot.graf.prop(estimado_theta_1,1,0.5)
#análise descritiva
estimado_theta_1 = estima.theta(df_11,2,0.95)
plot.graf.prop(estimado_theta_1,1,0.5)
library(printr)
medidas_allbound = as.vector(as.vector(table(subset(df_1,df_1$Material=="Allbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Allbond")$B))+c(table(subset(df_1,df_1$Material=="Allbond")$C),0))
#sum(medidas_allbound)
medidas_optibond = as.vector(c(table(subset(df_1,df_1$Material=="Optibond")$A),0)+c(table(subset(df_1,df_1$Material=="Optibond")$B),0)+c(5,17,1,0,1))
#sum(medidas_optibond)
medidas_Scotchbond = as.vector(as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$A))+as.vector(table(subset(df_1,df_1$Material=="Scotchbond")$B))+c(table(subset(df_1,df_1$Material=="Scotchbond")$C)))
#sum(medidas_Scotchbond)
#o df_11 refere-se a contagem de cada nível de microinfiltração por tipo de material
df_11 = matrix(c(medidas_allbound,medidas_optibond,medidas_Scotchbond),3,5,byrow=T)
dimnames(df_11) <- list(c("A","O","S"),c("0","1","2","3","4"))
names(dimnames(df_11)) <- c("Material","Nível de microinfiltração")
df_11
totais <- c(sum(df_11[1,]),sum(df_11[2,]),sum(df_11[3,]))
tbl_contingencia = as.matrix(data.frame(df_11,totais))
dimnames(tbl_contingencia) <- list(c("Allbond","Optibond","Scotchbond"),c(" 0"," 1"," 2"," 3"," 4"," Total"))
names(dimnames(tbl_contingencia)) <- c("Material","Nível de microinfiltração")
df_111
#análise descritiva
estimado_theta_1 = estima.theta(df_11,2,0.95)
plot.graf.prop(estimado_theta_1,1,0.5)
#análise descritiva
estimado_theta_1 = estima.theta(df_11,2,0.95)
#fazer uma legenda A = Allbond,  O = Optibond e S = Scotchbond
plot.graf.prop(estimado_theta_1,1,0.5)
B = matrix(c(numeric(15),numeric(15),numeric(15)),3)
B[1,c(1,6,11)] = c(1,-1,-1)
D = numeric(3)
B
B = matrix(c(numeric(15),numeric(15),numeric(15)),3)
B[1,c(1,6,11)] = c(1,-1,-1)
D = numeric(3)
B
